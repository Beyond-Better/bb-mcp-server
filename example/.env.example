# ExampleCorp MCP Server Configuration
# Copy this file to .env and customize the values for your environment

# =============================================================================
# MCP TRANSPORT CONFIGURATION
# =============================================================================
# MCP transport type: 'stdio' for Claude Desktop, 'http' for web integration
MCP_TRANSPORT=stdio

## for http transport only
# Session management configuration
# Session timeout in milliseconds (default: 30 minutes = 1800000ms)
MCP_SESSION_TIMEOUT=1800000
# Session cleanup interval in milliseconds (default: 5 minutes = 300000ms)
MCP_SESSION_CLEANUP_INTERVAL=300000
# Maximum concurrent sessions (default: 1000)
MCP_MAX_CONCURRENT_SESSIONS=1000
# Enable session persistence across server restarts
MCP_ENABLE_SESSION_PERSISTENCE=true

# =============================================================================
# THIRD-PARTY API CONFIGURATION
# =============================================================================
# Generic third-party API service configuration
THIRDPARTY_API_BASE_URL=https://api.examplecorp.com
THIRDPARTY_API_VERSION=v1
THIRDPARTY_API_TIMEOUT=3000
THIRDPARTY_API_RETRY_ATTEMPTS=3
THIRDPARTY_API_RETRY_DELAY=1000

# =============================================================================
# OAUTH CONSUMER CONFIGURATION
# =============================================================================
# OAuth Consumer: MCP server connecting TO third-party APIs
OAUTH_CONSUMER_CLIENT_ID=examplecorp-id
OAUTH_CONSUMER_CLIENT_SECRET=examplecorp-secret
OAUTH_CONSUMER_REDIRECT_URI=http://localhost:3000/oauth/consumer/callback
OAUTH_CONSUMER_AUTH_URL=https://httpbin.org/anything/oauth/authorize
OAUTH_CONSUMER_TOKEN_URL=https://httpbin.org/anything/oauth/token
OAUTH_CONSUMER_SCOPES=read,write

# Optional third-party specific metadata
THIRDPARTY_ORGANIZATION=examplecorp-organization-id
THIRDPARTY_DEPARTMENT=examplecorp-department

# =============================================================================
# OAUTH PROVIDER CONFIGURATION (for HTTP transport)
# =============================================================================
# OAuth provider settings when MCP server acts as OAuth provider
OAUTH_PROVIDER_CLIENT_ID=mcp-server-client-id
OAUTH_PROVIDER_CLIENT_SECRET=mcp-server-client-secret
OAUTH_PROVIDER_REDIRECT_URI=http://localhost:3000/oauth/callback
OAUTH_PROVIDER_ISSUER=http://localhost:3000

# OAuth token expiration settings
OAUTH_TOKEN_EXPIRATION=3600
OAUTH_REFRESH_TOKEN_EXPIRATION=604800
OAUTH_ENABLE_DYNAMIC_CLIENT_REG=false

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
# Deno KV database path for sessions, credentials, and workflow state
DENO_KV_PATH=./data/examplecorp-mcp-server.db
STORAGE_PERSISTENCE=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log levels: debug, info, warn, error
LOG_LEVEL=info
LOG_FORMAT=json

# Audit logging settings
AUDIT_LEVEL=info
AUDIT_INCLUDE_REQUEST_DATA=true
AUDIT_INCLUDE_RESPONSE_DATA=false

# =============================================================================
# HTTP SERVER CONFIGURATION (for HTTP transport)
# =============================================================================
HTTP_PORT=3000
HTTP_HOST=localhost

# CORS settings for web integration
HTTP_CORS_ENABLED=true
HTTP_CORS_ORIGINS=http://localhost:3000,https://your-web-app.com

# =============================================================================
# PLUGIN DISCOVERY CONFIGURATION
# =============================================================================
# Plugin discovery paths - where to look for plugin files
PLUGINS_DISCOVERY_PATHS=./example/src/workflows,./example/src/plugins,./plugins

# Auto-load discovered plugins on startup
PLUGINS_AUTOLOAD=true

# Watch plugin files for changes (development mode)
PLUGINS_WATCH_CHANGES=false

# Optional: Comma-separated list of allowed plugins (leave empty to allow all)
# PLUGINS_ALLOWED_LIST=example_query,example_operation

# Optional: Comma-separated list of blocked plugins
PLUGINS_BLOCKED_LIST=

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# =============================================================================
# Enable additional debugging features
DEBUG_ENABLED=false
STDIO_ENABLE_BINARY=false

# Performance monitoring
ENABLE_METRICS=true
METRICS_PORT=3001

# =============================================================================
# LIBRARY DEMONSTRATION
# =============================================================================
# This .env.example demonstrates the target configuration approach:
#
# ✅ BEFORE (Typical): Complex configuration scattered across multiple files
# ✅ AFTER (with library): Single .env file with clear section organization
# ✅ Library components: Handled automatically with sensible defaults
# ✅ Consumer components: Only ExampleCorp-specific configuration required
# ✅ Environment-based: Easy deployment across different environments
# ✅ Validation: Library ConfigManager validates all settings
#
# KEY SIMPLIFICATIONS:
# - OAuth configuration: Library handles complexity, consumer provides credentials
# - Transport configuration: Library provides both STDIO and HTTP with simple toggle
# - Storage configuration: Library KV management with single database path
# - Logging configuration: Library provides structured logging with simple settings
# - HTTP server configuration: Library handles server setup, consumer provides customization
#
# LIBRARY BENEFITS:
# - Reduced configuration complexity from ~50 settings to ~15 core settings
# - Clear separation between library settings and business settings
# - Environment-specific deployment with same configuration structure
# - Built-in validation and error reporting for configuration issues
# - Documentation embedded in configuration file for developer experience