{
  // Beyond MCP Server - Deno Configuration
  // Updated for Deno v2+ compatibility

  "name": "@beyondbetter/bb-mcp-server-example-plugin-workflows",
  "version": "1.0.0",
  "description": "Manual custom dependencies example - Multi-step workflow demonstrations with state management",
  "author": "Beyond MCP Server Examples",
  "license": "MIT",
  "exports": {
    ".": "./main.ts"
  },

  "compilerOptions": {
    "lib": ["deno.window", "deno.unstable"],
    "strict": true,
    "exactOptionalPropertyTypes": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedIndexedAccess": true,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false
  },

  "fmt": {
    "include": ["src/", "main.ts"],
    "exclude": ["data/"]
  },

  "lint": {
    "include": ["src/", "main.ts"],
    "exclude": ["data/", "*.test.ts"]
  },

  "test": {
    "include": ["tests/**/*.test.ts"],
    "exclude": []
  },

  "tasks": {
    "start": "deno run --allow-all --unstable-kv main.ts",
    "start:http": "MCP_TRANSPORT=http deno run --allow-all --unstable-kv main.ts",
    "start:debug": "LOG_LEVEL=debug deno run --allow-all --unstable-kv main.ts",
    "dev": "deno run --allow-all --unstable-kv --watch main.ts",
    "test": "deno test --allow-all --unstable-kv tests/",
    "test:workflows": "deno test --allow-all tests/workflows/",
    "test:integration": "deno test --allow-all tests/integration/",
    "test:watch": "deno test --allow-all --unstable-kv --watch tests/",
    "test:no-check": "deno test --allow-all --unstable-kv --no-check tests/",
    "tool:test": "deno test --allow-all --unstable-kv --coverage=coverage tests/",
    "tool:test:file": "deno test --allow-all --unstable-kv --coverage=coverage ",
    "fmt": "deno fmt",
    "lint": "deno lint",
    "check": "deno check main.ts src/**/*.ts"
  },

  // use `importMap` for local testing
  "importMap": "../import_map.json",
  // use `imports` in real app
  // "imports": {
  //   "@beyondbetter/bb-mcp-server": "jsr:@beyondbetter/bb-mcp-server",
  //   "@std/assert": "jsr:@std/assert@^1.0.0",
  //   "@std/testing": "jsr:@std/testing@^1.0.0",
  //   "zod": "npm:zod@^3.22.4"
  // },

  "exclude": [
    "data/",
    ".env"
  ]
}

// LIBRARY DEMONSTRATION:
// This shows how a consumer project would depend on the bb-mcp-server library
// Key points:
// - Single library dependency: "@beyondbetter/bb-mcp-server": "jsr:@beyondbetter/bb-mcp-server@^0.1.0"
// - No complex infrastructure dependencies (OAuth libs, transport libs, etc.)
// - Standard Deno project structure
// - Focus on business logic rather than MCP server infrastructure
