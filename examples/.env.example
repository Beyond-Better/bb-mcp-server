# Beyond MCP Server - Environment Configuration Template
# Copy this file to .env and customize as needed

# =============================================================================
# MCP TRANSPORT CONFIGURATION
# =============================================================================

# MCP Transport Type: 'stdio' or 'http'
# - stdio: Standard Input/Output (default, for MCP clients)
# - http: HTTP server (for web interfaces and debugging)
MCP_TRANSPORT=stdio

# HTTP Configuration (only used when MCP_TRANSPORT=http)
# Host and port for HTTP server
HTTP_HOST=localhost
HTTP_PORT=3000

# Enable CORS for web clients (only for HTTP transport)
HTTP_CORS_ENABLED=true
HTTP_CORS_ORIGINS=*

# Session management configuration (only for HTTP transport)
# Session timeout in milliseconds (default: 30 minutes = 1800000ms)
MCP_SESSION_TIMEOUT=1800000
# Session cleanup interval in milliseconds (default: 5 minutes = 300000ms)
MCP_SESSION_CLEANUP_INTERVAL=300000
# Maximum concurrent sessions (default: 1000)
MCP_MAX_CONCURRENT_SESSIONS=1000
# Enable session persistence across server restarts
MCP_ENABLE_SESSION_PERSISTENCE=true

# Enable insecure mode (no oauth) for web clients (only for HTTP transport)
HTTP_ALLOW_INSECURE=false

# =============================================================================
# THIRD-PARTY API CONFIGURATION
# =============================================================================
# Generic third-party API service configuration
THIRDPARTY_API_BASE_URL=https://api.examplecorp.com
THIRDPARTY_API_VERSION=v1
THIRDPARTY_API_TIMEOUT=3000
THIRDPARTY_API_RETRY_ATTEMPTS=3
THIRDPARTY_API_RETRY_DELAY=1000

# =============================================================================
# OAUTH CONSUMER CONFIGURATION
# =============================================================================
# OAuth Consumer: MCP server connecting TO third-party APIs
OAUTH_CONSUMER_CLIENT_ID=examplecorp-id
OAUTH_CONSUMER_CLIENT_SECRET=examplecorp-secret
OAUTH_CONSUMER_REDIRECT_URI=http://localhost:3000/oauth/consumer/callback
OAUTH_CONSUMER_AUTH_URL=https://httpbin.org/anything/oauth/authorize
OAUTH_CONSUMER_TOKEN_URL=https://httpbin.org/anything/oauth/token
OAUTH_CONSUMER_SCOPES=read,write

# Optional third-party specific metadata
THIRDPARTY_ORGANIZATION=examplecorp-organization-id
THIRDPARTY_DEPARTMENT=examplecorp-department

# =============================================================================
# OAUTH PROVIDER CONFIGURATION (for HTTP transport)
# =============================================================================
# OAuth provider settings when MCP server acts as OAuth provider
OAUTH_PROVIDER_CLIENT_ID=mcp-server-client-id
OAUTH_PROVIDER_CLIENT_SECRET=mcp-server-client-secret
OAUTH_PROVIDER_REDIRECT_URI=http://localhost:3000/oauth/callback
OAUTH_PROVIDER_ISSUER=http://localhost:3000

# OAuth token expiration settings
OAUTH_TOKEN_EXPIRATION=3600
OAUTH_REFRESH_TOKEN_EXPIRATION=604800
OAUTH_ENABLE_DYNAMIC_CLIENT_REG=false

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level: 'debug', 'info', 'warn', 'error'
# - debug: Verbose logging for development
# - info: Standard operational logging
# - warn: Warning and error messages only
# - error: Error messages only
LOG_LEVEL=info

# Log Format: 'text' or 'json'
# - text: Human-readable format
# - json: Structured JSON format
LOG_FORMAT=text

# =============================================================================
# PLUGIN CONFIGURATION
# =============================================================================

# Plugin Discovery Paths (comma-separated)
# Directories where the system looks for plugins
PLUGINS_DISCOVERY_PATHS=./src/plugins

# Auto-load discovered plugins
# Set to 'false' to disable automatic plugin loading
PLUGINS_AUTOLOAD=true

# Plugin Allow List (comma-separated, optional)
# Only load specific plugins - leave empty to load all discovered plugins
# PLUGINS_ALLOWED_LIST=WorkflowPlugin

# Plugin Block List (comma-separated, optional)
# Prevent specific plugins from loading
# PLUGINS_BLOCKED_LIST=

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Deno KV Database Path
# Path to the key-value database file
DENO_KV_PATH=./data/api-mcp-server.db

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Mode
# Enables additional debugging features
DEV_MODE=true

# Watch for Plugin Changes (development only)
# Automatically reload plugins when files change
PLUGINS_WATCH_CHANGES=false

# =============================================================================
# EXAMPLE TOOL CONFIGURATION
# =============================================================================

# Default timezone for datetime operations
DEFAULT_TIMEZONE=UTC

# System info detail level ('basic' or 'detailed')
SYSTEM_INFO_DEFAULT_LEVEL=basic

# JSON formatting default indentation
JSON_FORMAT_INDENT=2

# =============================================================================
# OPTIONAL: ADVANCED CONFIGURATION
# =============================================================================

# Enable audit logging
AUDIT_ENABLED=false

# Audit log file path (optional)
# AUDIT_LOG_FILE=./logs/audit.log

# Audit log retention in days
AUDIT_RETENTION_DAYS=30

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# Maximum request size in bytes
MAX_REQUEST_SIZE=1048576

# =============================================================================
# USAGE NOTES
# =============================================================================

# 1. GETTING STARTED:
#    - Copy this file to .env
#    - Adjust settings as needed
#    - Run: deno run --allow-all main.ts

# 2. TRANSPORT MODES:
#    - Use stdio for MCP client integration
#    - Use http for web debugging and testing
#    - Access HTTP mode at: http://localhost:3000

# 3. DEVELOPMENT:
#    - Set LOG_LEVEL=debug for verbose logging
#    - Set DEV_MODE=true for development features
#    - Use PLUGINS_WATCH_CHANGES=true for auto-reload

# 4. PRODUCTION:
#    - Set LOG_LEVEL=info or warn
#    - Set DEV_MODE=false
#    - Configure appropriate DENO_KV_PATH
#    - Review security settings

# 5. CUSTOMIZATION:
#    - Add your own environment variables as needed
#    - Tool-specific configuration can be added here
#    - Plugin-specific settings go in this file