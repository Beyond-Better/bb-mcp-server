# Beyond MCP Server - Environment Configuration Template
# Copy this file to .env and customize as needed

ENVIRONMENT=staging

# =============================================================================
# MCP TRANSPORT CONFIGURATION
# =============================================================================

# MCP Transport Type: 'stdio' or 'http'
# - stdio: Standard Input/Output (default, for MCP clients)
# - http: HTTP server (for web interfaces and debugging)
MCP_TRANSPORT=stdio

# HTTP Configuration (only used when MCP_TRANSPORT=http)
# Host and port for HTTP server
HTTP_HOST=localhost
HTTP_PORT=3000

# Enable CORS for web clients (only for HTTP transport)
HTTP_CORS_ENABLED=true
HTTP_CORS_ORIGINS=*

# Session management configuration (only for HTTP transport)
# Session timeout in milliseconds (default: 30 minutes = 1800000ms)
MCP_SESSION_TIMEOUT=1800000
# Session cleanup interval in milliseconds (default: 5 minutes = 300000ms)
MCP_SESSION_CLEANUP_INTERVAL=300000
# Maximum concurrent sessions (default: 1000)
MCP_MAX_CONCURRENT_SESSIONS=1000
# Enable session persistence across server restarts
MCP_SESSION_PERSISTENCE_ENABLED=true
MCP_SESSION_RESTORE_ENABLED=true

# Enable insecure mode (no oauth) for web clients (only for HTTP transport)
HTTP_ALLOW_INSECURE=false

# =============================================================================
# THIRD-PARTY API CONFIGURATION
# =============================================================================
# Generic third-party API service configuration
THIRDPARTY_API_PROVIDER_ID=examplecorp
THIRDPARTY_API_BASE_URL=https://api.examplecorp.com
THIRDPARTY_API_VERSION=v1
THIRDPARTY_API_TIMEOUT=5000
THIRDPARTY_API_RETRY_ATTEMPTS=3
THIRDPARTY_API_RETRY_DELAY=1000

# =============================================================================
# OAUTH CONSUMER CONFIGURATION
# =============================================================================
# OAuth Consumer: MCP server connecting TO third-party APIs
OAUTH_CONSUMER_PROVIDER_ID=examplecorp-id
OAUTH_CONSUMER_CLIENT_ID=examplecorp-client-id
OAUTH_CONSUMER_CLIENT_SECRET=examplecorp-secret
OAUTH_CONSUMER_REDIRECT_URI=http://localhost:3000/oauth/consumer/callback
OAUTH_CONSUMER_AUTH_URL=https://httpbin.org/anything/oauth/authorize
OAUTH_CONSUMER_TOKEN_URL=https://httpbin.org/anything/oauth/token
OAUTH_CONSUMER_SCOPES=read,write

# Optional third-party specific metadata
THIRDPARTY_ORGANIZATION=examplecorp-organization-id
THIRDPARTY_DEPARTMENT=examplecorp-department

# =============================================================================
# OAUTH PROVIDER CONFIGURATION (for HTTP transport)
# =============================================================================
# OAuth provider settings when MCP server acts as OAuth provider
OAUTH_PROVIDER_CLIENT_ID=mcp-server-client-id
OAUTH_PROVIDER_CLIENT_SECRET=mcp-server-client-secret
OAUTH_PROVIDER_REDIRECT_URI=http://localhost:3000/oauth/callback
OAUTH_PROVIDER_ISSUER=http://localhost:3000

# OAuth token expiration settings
OAUTH_PROVIDER_TOKEN_EXPIRATION=14400000
OAUTH_PROVIDER_REFRESH_TOKEN_EXPIRATION=2592000000
OAUTH_PROVIDER_DYNAMIC_CLIENT_REG=false

# # =============================================================================
# # MCP AUTHENTICATION CONFIGURATION
# # =============================================================================
# # MCP Authentication settings (follows MCP specification)
# 
# # Basic Authentication
# MCP_AUTH_ENABLED=true                    # Enable authentication (auto-enabled if oauthProvider available)
# MCP_AUTH_SKIP=false                      # Skip authentication override
# MCP_AUTH_REQUIRE=true                    # Require authentication for MCP endpoints
# 
# # Transport-specific Authentication
# # HTTP transport auth (per MCP spec: HTTP SHOULD use OAuth)
# MCP_AUTH_HTTP_ENABLED=true               # Enable auth for HTTP transport
# MCP_AUTH_HTTP_SKIP=false                 # Skip auth for HTTP transport
# MCP_AUTH_HTTP_REQUIRE=true               # Require auth for HTTP endpoints
# 
# # STDIO transport auth (per MCP spec: STDIO SHOULD NOT use OAuth)
# MCP_AUTH_STDIO_ENABLED=false             # Disable auth for STDIO transport (per MCP spec)
# MCP_AUTH_STDIO_ALLOW_OAUTH=true          # Allow OAuth for STDIO despite spec discouragement
# MCP_AUTH_STDIO_SKIP=false                # Skip auth for STDIO transport
# 
# # Session Binding Configuration
# # Links MCP tokens to third-party tokens for enhanced security
# MCP_SESSION_BINDING_ENABLED=true         # Enable session binding
# MCP_SESSION_BINDING_AUTO_REFRESH=true    # Auto-refresh third-party tokens
# MCP_SESSION_BINDING_TIMEOUT_MS=5000      # Validation timeout (milliseconds)
# 
# # Authentication Error Handling
# MCP_AUTH_ERROR_DETAILS=true              # Include detailed errors
# MCP_AUTH_ERROR_GUIDANCE=true             # Include client guidance
# MCP_AUTH_CUSTOM_HEADERS=false            # Use custom error headers (not recommended per MCP spec)

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level: 'debug', 'info', 'warn', 'error'
# - debug: Verbose logging for development
# - info: Standard operational logging
# - warn: Warning and error messages only
# - error: Error messages only
LOG_LEVEL=info

# Log Format: 'text' or 'json'
# - text: Human-readable format
# - json: Structured JSON format
LOG_FORMAT=text

# =============================================================================
# PLUGIN CONFIGURATION
# =============================================================================

# Plugin Discovery Paths (comma-separated)
# Directories where the system looks for plugins
PLUGINS_DISCOVERY_PATHS=./src/plugins

# Auto-load discovered plugins
# Set to 'false' to disable automatic plugin loading
PLUGINS_AUTOLOAD=true

# Plugin Allow List (comma-separated, optional)
# Only load specific plugins - leave empty to load all discovered plugins
# PLUGINS_ALLOWED_LIST=WorkflowPlugin

# Plugin Block List (comma-separated, optional)
# Prevent specific plugins from loading
# PLUGINS_BLOCKED_LIST=

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Deno KV Database Path
# Path to the key-value database file
STORAGE_DENO_KV_PATH=./data/api-mcp-server.db

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Mode
# Enables additional debugging features
DEV_MODE=true

# Watch for Plugin Changes (development only)
# Automatically reload plugins when files change
PLUGINS_WATCH_CHANGES=false

# =============================================================================
# EXAMPLE TOOL CONFIGURATION
# =============================================================================

# Default timezone for datetime operations
DEFAULT_TIMEZONE=UTC

# System info detail level ('basic' or 'detailed')
SYSTEM_INFO_DEFAULT_LEVEL=basic

# JSON formatting default indentation
JSON_FORMAT_INDENT=2

# =============================================================================
# OPTIONAL: ADVANCED CONFIGURATION
# =============================================================================

# Enable audit logging
AUDIT_ENABLED=false

# Audit log file path (optional)
# AUDIT_LOG_FILE=./logs/audit.log

# Audit log retention in days
AUDIT_RETENTION_DAYS=30

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# Maximum request size in bytes
MAX_REQUEST_SIZE=1048576

# ==============================================================================
# CHUNKED TRANSPORT EVENT STORE CONFIGURATION
# ==============================================================================

# Enable chunked storage to handle large messages (recommended: true)
# Set to "simple" to use original TransportEventStore (limited to 64KB messages)
TRANSPORT_STORAGE_TYPE=chunked

# Maximum size per chunk in bytes (default: 61440 = 60KB)
# Should be less than Deno KV's 64KB limit, leaving room for metadata
TRANSPORT_MAX_CHUNK_SIZE=61440

# Enable compression for large messages (default: true)
# Automatically compresses messages larger than compression threshold
TRANSPORT_COMPRESSION_ENABLED=true

# Compression threshold in bytes (default: 1024 = 1KB)
# Messages smaller than this won't be compressed
TRANSPORT_COMPRESSION_THRESHOLD=1024

# Maximum total message size in bytes (default: 10485760 = 10MB)
# Messages larger than this will be rejected with an error
TRANSPORT_MAX_MESSAGE_SIZE=10485760

# ==============================================================================
# CHUNKED STORAGE MONITORING SETTINGS
# ==============================================================================

# Enable detailed logging for chunked storage operations (default: false)
TRANSPORT_CHUNKED_DEBUG_LOGGING=false

# Log compression statistics (default: true)
TRANSPORT_LOG_COMPRESSION_STATS=true

# ==============================================================================
# CHUNKED STORAGE PERFORMANCE TUNING
# ==============================================================================

# For high-throughput, small messages (< 10KB average)
# TRANSPORT_MAX_CHUNK_SIZE=51200          # 50KB chunks
# TRANSPORT_COMPRESSION_ENABLED=false       # Skip compression overhead
# TRANSPORT_MAX_MESSAGE_SIZE=1048576       # 1MB max

# For mixed message sizes with some large payloads (recommended default)
# TRANSPORT_MAX_CHUNK_SIZE=61440           # 60KB chunks
# TRANSPORT_COMPRESSION_ENABLED=true        # Enable compression
# TRANSPORT_COMPRESSION_THRESHOLD=2048     # 2KB threshold
# TRANSPORT_MAX_MESSAGE_SIZE=10485760      # 10MB max

# For large file transfers or data dumps
# TRANSPORT_MAX_CHUNK_SIZE=46080           # 45KB chunks (smaller for reliability)
# TRANSPORT_COMPRESSION_ENABLED=true        # Definitely compress
# TRANSPORT_COMPRESSION_THRESHOLD=512      # 512B threshold (low)
# TRANSPORT_MAX_MESSAGE_SIZE=52428800      # 50MB max

# ==============================================================================
# MAINTENANCE SETTINGS
# ==============================================================================

# Cleanup old events automatically (default: true)
TRANSPORT_AUTO_CLEANUP_ENABLED=true

# Number of events to keep per stream (default: 1000)
TRANSPORT_KEEP_EVENT_COUNT=1000

# Cleanup interval in milliseconds (default: 86400000 = 24 hours)
TRANSPORT_CLEANUP_INTERVAL_MS=86400000

# =============================================================================
# USAGE NOTES
# =============================================================================

# 1. GETTING STARTED:
#    - Copy this file to .env
#    - Adjust settings as needed
#    - Run: deno run --allow-all main.ts

# 2. TRANSPORT MODES:
#    - Use stdio for MCP client integration
#    - Use http for web debugging and testing
#    - Access HTTP mode at: http://localhost:3000

# 3. DEVELOPMENT:
#    - Set LOG_LEVEL=debug for verbose logging
#    - Set DEV_MODE=true for development features
#    - Use PLUGINS_WATCH_CHANGES=true for auto-reload

# 4. PRODUCTION:
#    - Set LOG_LEVEL=info or warn
#    - Set DEV_MODE=false
#    - Configure appropriate STORAGE_DENO_KV_PATH
#    - Review security settings

# 5. CUSTOMIZATION:
#    - Add your own environment variables as needed
#    - Tool-specific configuration can be added here
#    - Plugin-specific settings go in this file